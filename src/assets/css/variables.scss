@charset "utf-8";

%clearfloat,
.clearfloat {
  &:after {
    display: block;
    clear: both;
    content: '';
    visibility: hidden;
    height: 0;
  }
  zoom: 1;
}

%place,
.place {
  transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
}

%placeX,
.placeX {
  transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -webkit-transform: translate(-50%, 0);
}

%placeY,
.placeY {
  transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -webkit-transform: translate(0, -50%);
}

%ellipsis,
.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
// ::-webkit-scrollbar-thumb:vertical:active{
//     background-color:#fecf30;
// }
article,
aside,
dialog,
figure,
footer,
footer,
header,
menu,
nav,
section {
  display: block;
}

/* ------- color ------- */

/* ------- size ------- */
$radius: 50%;

/* --------  -------- */
// 字体-颜色、大小、行高
@mixin h-fontSize($color, $size, $height) {
  color: $color;
  font-size: $size;
  line-height: $height;
}

// 背景颜色
@mixin h-bgColor($color) {
  background: $color;
}

// 边框圆角
@mixin h-radius($radius) {
  border-radius: $radius;
}

// 背景图
@mixin h-bgWhole($bg) {
  background: $bg;
  background-size: 100% 100%;
}

@mixin h-bgContain($bg) {
  background: $bg;
  background-size: auto 100%;
}

@mixin h-bgCover($bg) {
  background: $bg;
  background-size: 100%;
}

// 按钮
/*     宽       高    字体大小   颜色      圆角    背景类型   背景  是否有边框         边框样式          */
@mixin h-btn(
  $width,
  $height,
  $size,
  $color,
  $radius,
  $isBgType,
  $bg,
  $isBorder: false,
  $border: 1px solid #ccc
) {
  width: $width;
  border-radius: $radius;
  text-align: center;
  @include h-fontSize($color, $size, $height);
  // 设置背景
  @if ($isBgType == 0) {
    background: $bg;
  } @else if ($isBgType == 1) {
    @include h-bgWhole($bg);
  } @else if ($isBgType == 2) {
    @include h-bgContain($bg);
  } @else if ($isBgType == 3) {
    @include h-bgCover($bg);
  }
  // 设置边框
  @if $isBorder {
    border: $border;
  }
}

// 边框
@mixin h-border($border: 1px solid #ccc, $type: border) {
  @if ($type == border) {
    border: $border;
  } @else {
    border-#{$type}: $border;
  }
}

// 头像
@mixin h-avatar($width, $height, $border: none, $radius: 50%, $cover: contain) {
  width: $width;
  height: $height;
  border-radius: $radius;
  overflow: hidden;
  border: $border;
  img {
    object-fit: cover;
    @if ($cover == contain) {
      width: auto;
      height: 100%;
      margin: 0 auto;
    } @else if($cover == none) {
      width: 100%;
      height: 100%;
    } @else if($cover == cover) {
      width: 100%;
      height: auto;
    }
  }
  @if ($cover == cover) {
    display: flex;
    align-items: center;
  }
}

// 栅格
@mixin h-grid($split, $name, $gutter) {
  display: -webkit-box; /* 老版本语法: Safari, iOS, Android browser, older WebKit browsers. */
  display: -moz-box; /* 老版本语法: Firefox (buggy) */
  display: -ms-flexbox; /* 混合版本语法: IE 10 */
  display: -webkit-flex; /* 新版本语法: Chrome 21+ */
  display: flex; /* 新版本语法: Opera 12.1, Firefox 22+ */
  flex-wrap: wrap;
  @if ($name == li) {
    #{$name} {
      @include h-gutter($split, $gutter);
    }
  } @else {
    .#{$name} {
      @include h-gutter($split, $gutter);
    }
  }
}

// 分割调用
@mixin h-gutter($split, $gutter) {
  width: (100% / $split);
  @if ($gutter != 0px) {
    padding: $gutter;
  }
}

// 弹窗
@mixin h-maskLayer($bg: true, $name: true, $position: content) {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3000;
  position: fixed;
  @include h-bgColor($bg);
  .content,
  .#{$name} {
    position: fixed;
    z-index: 3010;
    @if ($position == content) {
      top: 50%;
      left: 50%;
      @extend %place;
    } @else if($position == top) {
      top: 0;
      left: 0;
    } @else if($position == right) {
      top: 0;
      right: 0;
    } @else if($position == bottom) {
      bottom: 0;
      left: 0;
    } @else if($position == left) {
      top: 0;
      left: 0;
    }
  }
  .closeLayerBtn {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3001;
    position: fixed;
  }
}
